{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AppsDock OS Documentation This documentation is about the development of AppsDock OS , a PHP based enterprise platform for business applications. By reading this documentation you will learn the concept, composition and the development aspects of the AppsDock platform. You will be able to maintain, develop, adapt and extend the platform by writing apps, extension and plugins. Concept The AppsDock OS platform provides a universal foundation which is able to run a large scale of business apps.","title":"Home"},{"location":"#appsdock-os-documentation","text":"This documentation is about the development of AppsDock OS , a PHP based enterprise platform for business applications. By reading this documentation you will learn the concept, composition and the development aspects of the AppsDock platform. You will be able to maintain, develop, adapt and extend the platform by writing apps, extension and plugins.","title":"AppsDock OS Documentation"},{"location":"#concept","text":"The AppsDock OS platform provides a universal foundation which is able to run a large scale of business apps.","title":"Concept"},{"location":"api/","text":"API Reference The AppsDock OS API is based on REST. The API provides resource oriented endpoint URLs. The endpoints accept form-encoded and JSON-encoded request bodies and response JSON-encoded data. In general, endpoints are secured by auth tokens which can be issued via the authentication API. The request of secured endpoints requires the token (bearer) in each request as authorization header.","title":"Introduction"},{"location":"api/#api-reference","text":"The AppsDock OS API is based on REST. The API provides resource oriented endpoint URLs. The endpoints accept form-encoded and JSON-encoded request bodies and response JSON-encoded data. In general, endpoints are secured by auth tokens which can be issued via the authentication API. The request of secured endpoints requires the token (bearer) in each request as authorization header.","title":"API Reference"},{"location":"api/authentication/","text":"Authentication","title":"Authentication"},{"location":"api/authentication/#authentication","text":"","title":"Authentication"},{"location":"api/errors/","text":"Errors","title":"Errors"},{"location":"api/errors/#errors","text":"","title":"Errors"},{"location":"api/pagination/","text":"Pagination","title":"Pagination"},{"location":"api/pagination/#pagination","text":"","title":"Pagination"},{"location":"api/rest/","text":"REST API Endpoints Access App Configuration Identity Mail Organization Status","title":"Overview"},{"location":"api/rest/#rest-api","text":"","title":"REST API"},{"location":"api/rest/#endpoints","text":"Access App Configuration Identity Mail Organization Status","title":"Endpoints"},{"location":"api/rest/access/","text":"Access REST API This page provides a list of all access REST API endpoints within AppsDock OS . The guideline for the REST API can be found here . Policy Resource 1 2 3 4 5 6 7 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"actionId\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"roleId\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"resource\" : \"*\" , \"effect\" : \"ALLOW\" } Attribute Type Description id string The policy ID in UUID format. actionId string The action ID in UUID format. roleId string The role ID in UUID format. resource string The resource affected by the policy. Valid values are: *, UUID effect string The effect of the policy. The effect can be to either allow or prohibit access. Valid values are: ALLOW, DENY Endpoints Change a policy POST /v1/policies/{id} Parameters Parameter Type Required Description effect string \u2714 The effect of the policy. The effect can be to either allow or prohibit access. Valid values are: ALLOW, DENY Payload 1 2 3 { \"effect\" : \"DENY\" } Create a policy POST /v1/policies Parameters Parameter Type Required Description roleId string \u2714 The role ID in UUID format. resource string \u2714 The resource affected by the policy. Valid values are: *, UUID effect string \u2714 The effect of the policy. The effect can be to either allow or prohibit access. Valid values are: ALLOW, DENY Payload 1 2 3 4 5 { \"roleId\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"resource\" : \"*\" , \"effect\" : \"ALLOW\" } Delete a policy DELETE /v1/policies/{id} Parameters This endpoint has no parameters. List all policies GET /v1/policies Parameters This endpoint has no parameters.","title":"Access"},{"location":"api/rest/access/#access-rest-api","text":"This page provides a list of all access REST API endpoints within AppsDock OS . The guideline for the REST API can be found here .","title":"Access REST API"},{"location":"api/rest/access/#policy","text":"","title":"Policy"},{"location":"api/rest/access/#resource","text":"1 2 3 4 5 6 7 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"actionId\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"roleId\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"resource\" : \"*\" , \"effect\" : \"ALLOW\" } Attribute Type Description id string The policy ID in UUID format. actionId string The action ID in UUID format. roleId string The role ID in UUID format. resource string The resource affected by the policy. Valid values are: *, UUID effect string The effect of the policy. The effect can be to either allow or prohibit access. Valid values are: ALLOW, DENY","title":"Resource"},{"location":"api/rest/access/#endpoints","text":"","title":"Endpoints"},{"location":"api/rest/access/#change-a-policy","text":"POST /v1/policies/{id}","title":"Change a policy"},{"location":"api/rest/access/#create-a-policy","text":"POST /v1/policies","title":"Create a policy"},{"location":"api/rest/access/#delete-a-policy","text":"DELETE /v1/policies/{id}","title":"Delete a policy"},{"location":"api/rest/access/#list-all-policies","text":"GET /v1/policies","title":"List all policies"},{"location":"api/rest/app/","text":"App REST API This page provides a list of all app REST API endpoints within AppsDock OS . The guideline for the REST API can be found here . App Resource 1 2 3 4 5 6 7 8 9 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"name\" : \"Jarvis\" , \"active\" : true , \"version\" : \"1.0.0\" , \"build\" : \"#59-1964\" , \"status\" : \"READY\" , \"channel\" : \"BETA\" } Attribute Type Description id string The app ID in UUID format. name string The name of the application. active bool The activity status of the application. version string The version number of the application. The number is divided into major, minor and revision number, each separated by a dot. build string The build number of the application. The number can be freely assigned. status string The life status of the application. channel string The development status of the application. Endpoints Activate an app POST /v1/apps:activate/{id} Parameters This endpoint has no parameters. Deactivate an app POST /v1/apps:deactivate/{id} Parameters This endpoint has no parameters. Install an app POST /v1/apps:install/{id} Parameters This endpoint has no parameters. List all apps GET /v1/apps Parameters This endpoint has no parameters. Uninstall an app POST /v1/apps:uninstall/{id} Parameters This endpoint has no parameters. Update an app POST /v1/apps:update/{id} Parameters This endpoint has no parameters.","title":"App"},{"location":"api/rest/app/#app-rest-api","text":"This page provides a list of all app REST API endpoints within AppsDock OS . The guideline for the REST API can be found here .","title":"App REST API"},{"location":"api/rest/app/#app","text":"","title":"App"},{"location":"api/rest/app/#resource","text":"1 2 3 4 5 6 7 8 9 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"name\" : \"Jarvis\" , \"active\" : true , \"version\" : \"1.0.0\" , \"build\" : \"#59-1964\" , \"status\" : \"READY\" , \"channel\" : \"BETA\" } Attribute Type Description id string The app ID in UUID format. name string The name of the application. active bool The activity status of the application. version string The version number of the application. The number is divided into major, minor and revision number, each separated by a dot. build string The build number of the application. The number can be freely assigned. status string The life status of the application. channel string The development status of the application.","title":"Resource"},{"location":"api/rest/app/#endpoints","text":"","title":"Endpoints"},{"location":"api/rest/app/#activate-an-app","text":"POST /v1/apps:activate/{id}","title":"Activate an app"},{"location":"api/rest/app/#deactivate-an-app","text":"POST /v1/apps:deactivate/{id}","title":"Deactivate an app"},{"location":"api/rest/app/#install-an-app","text":"POST /v1/apps:install/{id}","title":"Install an app"},{"location":"api/rest/app/#list-all-apps","text":"GET /v1/apps","title":"List all apps"},{"location":"api/rest/app/#uninstall-an-app","text":"POST /v1/apps:uninstall/{id}","title":"Uninstall an app"},{"location":"api/rest/app/#update-an-app","text":"POST /v1/apps:update/{id}","title":"Update an app"},{"location":"api/rest/configuration/","text":"Configuration REST API This page provides a list of all configuration REST API endpoints within AppsDock OS . The guideline for the REST API can be found here . Setting Resource 1 2 3 4 5 6 7 8 9 10 11 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"type\" : \"STRING\" , \"value\" : [ \"America\\/New_York\" ], \"default\" : [ \"Europe\\/Berlin\" ], \"options\" : null } Attribute Type Description id string The setting ID as UUID . type string The data type of the setting. value array | null The value of the setting. default array | null The default value of the setting. options array | null The options of the setting. Endpoints Change a configuration setting POST /v1/settings/{id} Description Changes the value of the setting resource. Parameters Parameter Type Required Description value bool | int | string | array \u2714 The value of the setting. The type of value depends on the specified data type. Payload 1 2 3 { \"value\" : \"Europe\\/Berlin\" } Get a configuration setting GET /v1/settings/{id} Description Returns the setting resource. Parameters This endpoint has no parameters. List all configuration settings GET /v1/settings Description Returns a collection of all setting resources. Parameters This endpoint has no parameters.","title":"Configuration"},{"location":"api/rest/configuration/#configuration-rest-api","text":"This page provides a list of all configuration REST API endpoints within AppsDock OS . The guideline for the REST API can be found here .","title":"Configuration REST API"},{"location":"api/rest/configuration/#setting","text":"","title":"Setting"},{"location":"api/rest/configuration/#resource","text":"1 2 3 4 5 6 7 8 9 10 11 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"type\" : \"STRING\" , \"value\" : [ \"America\\/New_York\" ], \"default\" : [ \"Europe\\/Berlin\" ], \"options\" : null } Attribute Type Description id string The setting ID as UUID . type string The data type of the setting. value array | null The value of the setting. default array | null The default value of the setting. options array | null The options of the setting.","title":"Resource"},{"location":"api/rest/configuration/#endpoints","text":"","title":"Endpoints"},{"location":"api/rest/configuration/#change-a-configuration-setting","text":"POST /v1/settings/{id} Description Changes the value of the setting resource.","title":"Change a configuration setting"},{"location":"api/rest/configuration/#get-a-configuration-setting","text":"GET /v1/settings/{id} Description Returns the setting resource.","title":"Get a configuration setting"},{"location":"api/rest/configuration/#list-all-configuration-settings","text":"GET /v1/settings Description Returns a collection of all setting resources.","title":"List all configuration settings"},{"location":"api/rest/identity/","text":"Identity REST API This page provides a list of all identity REST API endpoints within AppsDock OS . The guideline for the REST API can be found here . Group Resource 1 2 3 4 5 6 7 8 9 10 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"name\" : { \"de-DE\" : \"Entwicklung\" , \"en-GB\" : \"Development\" , \"zh-Hans-HK\" : \"\\u53d1\\u5c55\" }, \"createdBy\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"createdAt\" : 1620979351 } Attribute Type Description id string The ID of the group as UUID . name array The name of the group per language. createdBy string The ID of the user who created the group as UUID . createdAt int The time of creation ot the record as a timestamp. Endpoints Assign a user to a group POST /v1/groups/{groupId}/users/{userId} Parameters This endpoint has no parameters. Create a group POST /v1/groups Parameters Parameter Type Required Description name array \u2714 The name of the group per language. Payload 1 2 3 4 5 6 7 { \"name\" : { \"de-DE\" : \"Entwicklung\" , \"en-GB\" : \"Development\" , \"zh-Hans-HK\" : \"\\u53d1\\u5c55\" } } Delete a group DELETE /v1/groups/{id} Parameters This endpoint has no parameters. Get a group GET /v1/groups/{id} Parameters This endpoint has no parameters. List all groups GET /v1/groups Parameters This endpoint has no parameters. Remove a user from a group DELETE /v1/groups/{groupId}/users/{userId} Parameters This endpoint has no parameters. Rename a group PATCH /v1/groups/{id} Parameters Parameter Type Required Description name array \u2714 The name of the group per language. Payload 1 2 3 4 5 6 7 { \"name\" : { \"de-DE\" : \"Entwicklung\" , \"en-GB\" : \"Development\" , \"zh-Hans-HK\" : \"\\u53d1\\u5c55\" } } Role Resource 1 2 3 4 5 6 7 8 9 10 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"name\" : { \"de-DE\" : \"Entwicklung\" , \"en-GB\" : \"Development\" , \"zh-Hans-HK\" : \"\\u53d1\\u5c55\" }, \"type\" : \"USER\" , \"isPredefined\" : true } Attribute Type Description id string The ID of the role as UUID name array The name of the role per language. type string The type of the role. Valid values are: USER, ADMIN, GUEST, EXTERNAL isPredefined bool Shows if the role is predefined or a created by a user. Endpoints Assign a role to a group POST /v1/roles/{roleId}/groups/{groupId} Parameters This endpoint has no parameters. Assign a role to a user POST /v1/roles/{roleId}/users/{userId} Parameters This endpoint has no parameters. Create a role POST /v1/roles Parameters Parameter Type Required Description name array \u2714 The name of the role per language. type string \u2714 Type of the role. Valid values are: USER, ADMIN, GUEST, EXTERNAL Payload 1 2 3 4 5 6 7 8 { \"name\" : { \"de-DE\" : \"Entwicklung\" , \"en-GB\" : \"Development\" , \"zh-Hans-HK\" : \"\\u53d1\\u5c55\" }, \"type\" : \"USER\" } Delete a role DELETE /v1/roles/{id} Parameters This endpoint has no parameters. Get a role GET /v1/roles/{id} Parameters This endpoint has no parameters. List all roles GET /v1/roles Parameters This endpoint has no parameters. Remove a role from a group DELETE /v1/roles/{roleId}/groups/{groupId} Parameters This endpoint has no parameters. Remove a role from a user DELETE /v1/roles/{roleId}/users/{userId} Parameters This endpoint has no parameters. Rename a role PATCH /v1/roles/{id} Parameters Parameter Type Required Description name array \u2714 The name of the role per language. Payload 1 2 3 4 5 6 7 { \"name\" : { \"de-DE\" : \"Entwicklung\" , \"en-GB\" : \"Development\" , \"zh-Hans-HK\" : \"\\u53d1\\u5c55\" } } User Resource 1 2 3 4 5 6 7 8 9 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"username\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"email\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"name\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"status\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"penultimateLoginAt\" : 1620979351 , \"createdAt\" : 1620972963 } Attribute Type Description id string The ID of the user as UUID . username string The username of the user. email string The email address of the user. name string The name of the user. status string The life status of the user. penultimateLoginAt int The penultimate login of the user as a timestamp. createdAt int The time of creation ot the record as a timestamp. Endpoints Create a user POST /v1/users Parameters Parameter Type Required Description organizationId string \u2716 The ID of the organization as UUID . username string \u2714 The username of the user. password string \u2714 The password of the user. email string \u2714 The email address of the user. name string \u2714 The name of the user. roles array \u2716 The ID of the role as UUID which should be assigned to the user. Payload 1 2 3 4 5 6 7 8 9 10 11 { \"organizationId\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"username\" : \"IronMan\" , \"password\" : \"4-v3ry.53cr37_p455w0rd\" , \"email\" : \"tony@stark-industries.com\" , \"name\" : \"Tony Stark\" , \"roles\" : [ \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" ] } Delete a user preference DELETE /v1/users/me/preferences/{settingId} Parameters This endpoint has no parameters. Get a user GET /v1/users/{id} Parameters This endpoint has no parameters. Get a user identity GET /v1/users/{id}/identity/{securityToken} Parameters This endpoint has no parameters. List all users GET /v1/users Parameters This endpoint has no parameters. Get the current user GET /v1/users/me Parameters This endpoint has no parameters. Get the current user policies GET /v1/users/me/policies Parameters This endpoint has no parameters. Get the current user preferences GET /v1/users/me/preferences Parameters This endpoint has no parameters. Set a user password PATCH /v1/users/{id}/password Parameters Parameter Type Required Description password string \u2714 The password of the user. securityToken string \u2714 The security token to authenticate. Payload 1 2 3 4 { \"password\" : \"4-v3ry.53cr37_p455w0rd\" , \"securityToken\" : \"4-v3ry.53cr37_p455w0rd\" } Set a user preference PUT /v1/users/me/preferences Parameters Parameter Type Required Description settingId string \u2714 The ID of the configuration setting. value bool | int | string | array \u2714 The value to set the configuration setting set to. Payload 1 2 3 4 5 6 7 8 { \"settingId\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"value\" : { \"de-DE\" : \"Entwicklung\" , \"en-GB\" : \"Development\" , \"zh-Hans-HK\" : \"\\u53d1\\u5c55\" } }","title":"Identity"},{"location":"api/rest/identity/#identity-rest-api","text":"This page provides a list of all identity REST API endpoints within AppsDock OS . The guideline for the REST API can be found here .","title":"Identity REST API"},{"location":"api/rest/identity/#group","text":"","title":"Group"},{"location":"api/rest/identity/#resource","text":"1 2 3 4 5 6 7 8 9 10 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"name\" : { \"de-DE\" : \"Entwicklung\" , \"en-GB\" : \"Development\" , \"zh-Hans-HK\" : \"\\u53d1\\u5c55\" }, \"createdBy\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"createdAt\" : 1620979351 } Attribute Type Description id string The ID of the group as UUID . name array The name of the group per language. createdBy string The ID of the user who created the group as UUID . createdAt int The time of creation ot the record as a timestamp.","title":"Resource"},{"location":"api/rest/identity/#endpoints","text":"","title":"Endpoints"},{"location":"api/rest/identity/#assign-a-user-to-a-group","text":"POST /v1/groups/{groupId}/users/{userId}","title":"Assign a user to a group"},{"location":"api/rest/identity/#create-a-group","text":"POST /v1/groups","title":"Create a group"},{"location":"api/rest/identity/#delete-a-group","text":"DELETE /v1/groups/{id}","title":"Delete a group"},{"location":"api/rest/identity/#get-a-group","text":"GET /v1/groups/{id}","title":"Get a group"},{"location":"api/rest/identity/#list-all-groups","text":"GET /v1/groups","title":"List all groups"},{"location":"api/rest/identity/#remove-a-user-from-a-group","text":"DELETE /v1/groups/{groupId}/users/{userId}","title":"Remove a user from a group"},{"location":"api/rest/identity/#rename-a-group","text":"PATCH /v1/groups/{id}","title":"Rename a group"},{"location":"api/rest/identity/#role","text":"","title":"Role"},{"location":"api/rest/identity/#resource_1","text":"1 2 3 4 5 6 7 8 9 10 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"name\" : { \"de-DE\" : \"Entwicklung\" , \"en-GB\" : \"Development\" , \"zh-Hans-HK\" : \"\\u53d1\\u5c55\" }, \"type\" : \"USER\" , \"isPredefined\" : true } Attribute Type Description id string The ID of the role as UUID name array The name of the role per language. type string The type of the role. Valid values are: USER, ADMIN, GUEST, EXTERNAL isPredefined bool Shows if the role is predefined or a created by a user.","title":"Resource"},{"location":"api/rest/identity/#endpoints_1","text":"","title":"Endpoints"},{"location":"api/rest/identity/#assign-a-role-to-a-group","text":"POST /v1/roles/{roleId}/groups/{groupId}","title":"Assign a role to a group"},{"location":"api/rest/identity/#assign-a-role-to-a-user","text":"POST /v1/roles/{roleId}/users/{userId}","title":"Assign a role to a user"},{"location":"api/rest/identity/#create-a-role","text":"POST /v1/roles","title":"Create a role"},{"location":"api/rest/identity/#delete-a-role","text":"DELETE /v1/roles/{id}","title":"Delete a role"},{"location":"api/rest/identity/#get-a-role","text":"GET /v1/roles/{id}","title":"Get a role"},{"location":"api/rest/identity/#list-all-roles","text":"GET /v1/roles","title":"List all roles"},{"location":"api/rest/identity/#remove-a-role-from-a-group","text":"DELETE /v1/roles/{roleId}/groups/{groupId}","title":"Remove a role from a group"},{"location":"api/rest/identity/#remove-a-role-from-a-user","text":"DELETE /v1/roles/{roleId}/users/{userId}","title":"Remove a role from a user"},{"location":"api/rest/identity/#rename-a-role","text":"PATCH /v1/roles/{id}","title":"Rename a role"},{"location":"api/rest/identity/#user","text":"","title":"User"},{"location":"api/rest/identity/#resource_2","text":"1 2 3 4 5 6 7 8 9 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"username\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"email\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"name\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"status\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"penultimateLoginAt\" : 1620979351 , \"createdAt\" : 1620972963 } Attribute Type Description id string The ID of the user as UUID . username string The username of the user. email string The email address of the user. name string The name of the user. status string The life status of the user. penultimateLoginAt int The penultimate login of the user as a timestamp. createdAt int The time of creation ot the record as a timestamp.","title":"Resource"},{"location":"api/rest/identity/#endpoints_2","text":"","title":"Endpoints"},{"location":"api/rest/identity/#create-a-user","text":"POST /v1/users","title":"Create a user"},{"location":"api/rest/identity/#delete-a-user-preference","text":"DELETE /v1/users/me/preferences/{settingId}","title":"Delete a user preference"},{"location":"api/rest/identity/#get-a-user","text":"GET /v1/users/{id}","title":"Get a user"},{"location":"api/rest/identity/#get-a-user-identity","text":"GET /v1/users/{id}/identity/{securityToken}","title":"Get a user identity"},{"location":"api/rest/identity/#list-all-users","text":"GET /v1/users","title":"List all users"},{"location":"api/rest/identity/#get-the-current-user","text":"GET /v1/users/me","title":"Get the current user"},{"location":"api/rest/identity/#get-the-current-user-policies","text":"GET /v1/users/me/policies","title":"Get the current user policies"},{"location":"api/rest/identity/#get-the-current-user-preferences","text":"GET /v1/users/me/preferences","title":"Get the current user preferences"},{"location":"api/rest/identity/#set-a-user-password","text":"PATCH /v1/users/{id}/password","title":"Set a user password"},{"location":"api/rest/identity/#set-a-user-preference","text":"PUT /v1/users/me/preferences","title":"Set a user preference"},{"location":"api/rest/mail/","text":"Mail","title":"Mail"},{"location":"api/rest/mail/#mail","text":"","title":"Mail"},{"location":"api/rest/organization/","text":"Organization REST API This page provides a list of all organization REST API endpoints within AppsDock OS . The guideline for the REST API can be found here . Organization Resource 1 2 3 4 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"name\" : \"Stark Industries\" } Attribute Type Description id string The ID of the organization as UUID . name string The name of the organization. Endpoints Assign a user to an organization POST /v1/organizations/{organizationId}/users/{userId} Parameters This endpoint has no parameters. Create a organization POST /v1/organizations Description Creates a new organization resource. Parameters Parameter Type Required Description name string \u2714 The name of the organization. Payload 1 2 3 { \"name\" : \"Stark Industries\" } Delete a organization DELETE /v1/organizations/{id} Description Deletes an existing organization resource. Parameters This endpoint has no parameters. Get a organization GET /v1/organizations/{id} Description Returns the organization resource. Parameters This endpoint has no parameters. List all organizations GET /v1/organizations Description Returns a collection of all organization resources. Parameters This endpoint has no parameters. Remove a user from an organization DELETE /v1/organizations/{organizationId}/users/{userId} Parameters This endpoint has no parameters. Rename a organization POST /v1/organizations/{id} Description Renames an existing organization resource. Parameters Parameter Type Required Description name string \u2714 The name of the organization. Payload 1 2 3 { \"name\" : \"Stark Industries\" }","title":"Organization"},{"location":"api/rest/organization/#organization-rest-api","text":"This page provides a list of all organization REST API endpoints within AppsDock OS . The guideline for the REST API can be found here .","title":"Organization REST API"},{"location":"api/rest/organization/#organization","text":"","title":"Organization"},{"location":"api/rest/organization/#resource","text":"1 2 3 4 { \"id\" : \"680fe5ff-3b68-4d22-bb91-eb6a9712f78d\" , \"name\" : \"Stark Industries\" } Attribute Type Description id string The ID of the organization as UUID . name string The name of the organization.","title":"Resource"},{"location":"api/rest/organization/#endpoints","text":"","title":"Endpoints"},{"location":"api/rest/organization/#assign-a-user-to-an-organization","text":"POST /v1/organizations/{organizationId}/users/{userId}","title":"Assign a user to an organization"},{"location":"api/rest/organization/#create-a-organization","text":"POST /v1/organizations Description Creates a new organization resource.","title":"Create a organization"},{"location":"api/rest/organization/#delete-a-organization","text":"DELETE /v1/organizations/{id} Description Deletes an existing organization resource.","title":"Delete a organization"},{"location":"api/rest/organization/#get-a-organization","text":"GET /v1/organizations/{id} Description Returns the organization resource.","title":"Get a organization"},{"location":"api/rest/organization/#list-all-organizations","text":"GET /v1/organizations Description Returns a collection of all organization resources.","title":"List all organizations"},{"location":"api/rest/organization/#remove-a-user-from-an-organization","text":"DELETE /v1/organizations/{organizationId}/users/{userId}","title":"Remove a user from an organization"},{"location":"api/rest/organization/#rename-a-organization","text":"POST /v1/organizations/{id} Description Renames an existing organization resource.","title":"Rename a organization"},{"location":"api/rest/status/","text":"Status REST API This page provides a list of all organization REST API endpoints within AppsDock OS . The guideline for the REST API can be found here . Status Resource 1 2 3 { \"API-Server\" : \"OK\" } Attribute Type Description API -Server string Shows the API status. Endpoints Shows the system status. GET /v1/status Parameters This endpoint has no parameters.","title":"Status"},{"location":"api/rest/status/#status-rest-api","text":"This page provides a list of all organization REST API endpoints within AppsDock OS . The guideline for the REST API can be found here .","title":"Status REST API"},{"location":"api/rest/status/#status","text":"","title":"Status"},{"location":"api/rest/status/#resource","text":"1 2 3 { \"API-Server\" : \"OK\" } Attribute Type Description API -Server string Shows the API status.","title":"Resource"},{"location":"api/rest/status/#endpoints","text":"","title":"Endpoints"},{"location":"api/rest/status/#shows-the-system-status","text":"GET /v1/status","title":"Shows the system status."},{"location":"concepts/amqp/","text":"Message Queue ( AMQP ) AppsDock OS uses an AMQP based infrastructure to handle asynchronous messages, which allows executing long-running processes in the background by implementing async event handlers or async command executions via Message Bus within AppsDock OS . Composition AppsDock OS provides a dedicated AMQP -Agent that acts as a consumer and mediator of messages. AppsDock OS avoids processing messages via CLI in consumer mode directly due to potential environment inequality between CLI and PHP - FPM and disregard of PHP - FPM process worker benefits. Instead, the dedicated AMQP -Agent consumes the messages from AMQP server and executes, controls and monitors asynchronous PHP - FPM process workers, which process the messages. Publisher (AppsDock OS ) AppsDock OS uses the MessageBus component to publish messages to the AMQP server directly. It does not provide any kind of consuming the published messages via AMQP server due to this responsibility is adopted by the AppsDock AMQP -Agent. Instead, AppsDock OS provides an internal and secured API endpoint to handle published messages which are provided by the AMQP -Agent. The handling of these messages over API uses also the MessageBus component. Consumer (AppsDock AMQP -Agent) The dedicated AMQP -Agent, which is a part of the AppsDock Dedicated Services, is a scalable AMQP message consumer service. This service consumes the messages from the AMQP server directly and manage their processes and states in conjunction with PHP - FPM workers. Message Types (Subjects) AppsDock OS uses different types of messages for different process purposes. Each type of message uses a specific php class as message body to represent the message content. AppsDock OS supports actually two kinds of message types: - event - command. Each message type has several allocated message queues to handle different process results. - A main queue for delivery and processing - A retry queue for delayed redelivery on failures - A error queue for non-deliverable messages Event Message The event message type is used to handle asynchronous event handlers via MessageBus. This type uses AppsDock\\Core\\Event\\Integration\\IntegrationEvent as content class and is basically used to publish integration events. Command Message The command message type is used to execute asynchronous command handlers via MessageBus. This type uses any class which is a type of AppsDock\\Core\\Contracts\\App\\Application\\Command as content class. Approach in case of error As already described above (Message Types), the AMQP -Agent defines dedicated queues to handle failures . If the process worker failed (any case), the message will be rejected without a direct requeue . Instead, the message will be moved automatically into the retry queue which keep the failed message for a certain time. After this time, this message is published back into the main queue for a retry. If this procedure fails for a certain number of retries, this message will be dropped from main and retry queue and published into the error queue for further investigation.","title":"Message Queue (AMQP)"},{"location":"concepts/amqp/#message-queue-amqp","text":"AppsDock OS uses an AMQP based infrastructure to handle asynchronous messages, which allows executing long-running processes in the background by implementing async event handlers or async command executions via Message Bus within AppsDock OS .","title":"Message Queue (AMQP)"},{"location":"concepts/amqp/#composition","text":"AppsDock OS provides a dedicated AMQP -Agent that acts as a consumer and mediator of messages. AppsDock OS avoids processing messages via CLI in consumer mode directly due to potential environment inequality between CLI and PHP - FPM and disregard of PHP - FPM process worker benefits. Instead, the dedicated AMQP -Agent consumes the messages from AMQP server and executes, controls and monitors asynchronous PHP - FPM process workers, which process the messages.","title":"Composition"},{"location":"concepts/amqp/#publisher-appsdock-os","text":"AppsDock OS uses the MessageBus component to publish messages to the AMQP server directly. It does not provide any kind of consuming the published messages via AMQP server due to this responsibility is adopted by the AppsDock AMQP -Agent. Instead, AppsDock OS provides an internal and secured API endpoint to handle published messages which are provided by the AMQP -Agent. The handling of these messages over API uses also the MessageBus component.","title":"Publisher (AppsDock OS)"},{"location":"concepts/amqp/#consumer-appsdock-amqp-agent","text":"The dedicated AMQP -Agent, which is a part of the AppsDock Dedicated Services, is a scalable AMQP message consumer service. This service consumes the messages from the AMQP server directly and manage their processes and states in conjunction with PHP - FPM workers.","title":"Consumer (AppsDock AMQP-Agent)"},{"location":"concepts/amqp/#message-types-subjects","text":"AppsDock OS uses different types of messages for different process purposes. Each type of message uses a specific php class as message body to represent the message content. AppsDock OS supports actually two kinds of message types: - event - command. Each message type has several allocated message queues to handle different process results. - A main queue for delivery and processing - A retry queue for delayed redelivery on failures - A error queue for non-deliverable messages","title":"Message Types (Subjects)"},{"location":"concepts/amqp/#event-message","text":"The event message type is used to handle asynchronous event handlers via MessageBus. This type uses AppsDock\\Core\\Event\\Integration\\IntegrationEvent as content class and is basically used to publish integration events.","title":"Event Message"},{"location":"concepts/amqp/#command-message","text":"The command message type is used to execute asynchronous command handlers via MessageBus. This type uses any class which is a type of AppsDock\\Core\\Contracts\\App\\Application\\Command as content class.","title":"Command Message"},{"location":"concepts/amqp/#approach-in-case-of-error","text":"As already described above (Message Types), the AMQP -Agent defines dedicated queues to handle failures . If the process worker failed (any case), the message will be rejected without a direct requeue . Instead, the message will be moved automatically into the retry queue which keep the failed message for a certain time. After this time, this message is published back into the main queue for a retry. If this procedure fails for a certain number of retries, this message will be dropped from main and retry queue and published into the error queue for further investigation.","title":"Approach in case of error"},{"location":"concepts/identity-access/authentication/","text":"AppsDock OS Authentication Service The AppsDock OS application server provides a build in authentication and authorization service to secure the resources. This topic provides an overview how to authenticate and access secured resources of the application server. Basics The request of resources from AppsDock OS application server requires an access token from the AppsDock OS authentication service. To obtain an access token, there must be a registered auth client at AppsDock OS identity management which must be used when requesting the auth endpoints with client credentials from your web or app application. Auth Client The access of auth API endpoints requires at least one registered auth client at AppsDock OS identity management. The AppsDock OS identity management can register multiple auth client with different configurations which can be used by different applications. Each auth client has its own credentials (client id or client id with secret) which must be used when requesting the auth API . The credentials can be attached as basic base64 encoded Auhtorization header or as query parameter at request uri. Access token The access token is issued by the AppsDock authentication service and contains secured information (claims) about the actual operator. The token also contains information which are used to validate/authenticate the operator and verify that it has the required permissions / is authorized to perform the operation. Access tokens have to be attached to each request that intents to access secured resources of the AppsDock OS application server. The transport must be always over a secured channel like HTTPS . An access token issued by the AppsDock authentication service looks like the following example: 1 eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c To attach the access token, you must set the access token as bearer type in the Authorization header. Authentication The AppsDock OS authentication service provides an API for token and cookie based authentication management which includes the following operations: Endpoint Operation /auth/token Authentication with email/username and password /auth/token/refresh Session/Token refresh via refresh token or cookie /auth/revoke Revoke auth session via refresh token or cookie The AppsDock OS authentication service supports both token and cookie based authentication flows. Token Based Auth The token based authentication is used by confidential clients like mobile apps, which are capable of storing the refresh token securely. To obtain an access and refresh token, you have to send a request with the auth client credentials as authorization header to the token endpoint. 1 2 3 4 5 POST https://domain.com/auth/token Content-Type: application/json Authrorization: Basic WIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF {\"email\": \"jon@doe.com\", \"password\": \"xxxxx\"} The response contains the access/refresh token and additional information about the access token. 1 2 3 4 5 6 7 { \"expires_in\" : 180 , \"expires_at\" : 1595453215 , \"token_type\" : \"bearer\" , \"access_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0......\" , \"refresh_token\" : \"xwRJSMxNTE2MjMeKKF2QiwibmFtZSIfwpMeJf6Ik\" } The access token must be attached as bearer token in Authorization header on each request of secured resources. The refresh token is used to refresh the access token when it expires and obtain a new access token. Refresh token storage The refresh token must be stored securely and should not be accessible by the client user. Do not store the refresh token into any kind of client side storages of web applications like local or session store nor into cookies. Cookie Based Auth A cookie based client response only the expiry information about the current auth session, and uses a secured HTTPS only cookie to store the auth session information on client side. The auth cookie issued by the cookie based confidential client has also a short lifetime like the access token, so it must be refreshed to keep the auth session valid. 1 2 3 4 { \"expires_in\" : 180 , \"expires_at\" : 1595453215 } Public clients Public auth clients are currently not supported by the AppsDock authentication service!","title":"Authentication"},{"location":"concepts/identity-access/authentication/#appsdock-os-authentication-service","text":"The AppsDock OS application server provides a build in authentication and authorization service to secure the resources. This topic provides an overview how to authenticate and access secured resources of the application server.","title":"AppsDock OS Authentication Service"},{"location":"concepts/identity-access/authentication/#basics","text":"The request of resources from AppsDock OS application server requires an access token from the AppsDock OS authentication service. To obtain an access token, there must be a registered auth client at AppsDock OS identity management which must be used when requesting the auth endpoints with client credentials from your web or app application.","title":"Basics"},{"location":"concepts/identity-access/authentication/#auth-client","text":"The access of auth API endpoints requires at least one registered auth client at AppsDock OS identity management. The AppsDock OS identity management can register multiple auth client with different configurations which can be used by different applications. Each auth client has its own credentials (client id or client id with secret) which must be used when requesting the auth API . The credentials can be attached as basic base64 encoded Auhtorization header or as query parameter at request uri.","title":"Auth Client"},{"location":"concepts/identity-access/authentication/#access-token","text":"The access token is issued by the AppsDock authentication service and contains secured information (claims) about the actual operator. The token also contains information which are used to validate/authenticate the operator and verify that it has the required permissions / is authorized to perform the operation. Access tokens have to be attached to each request that intents to access secured resources of the AppsDock OS application server. The transport must be always over a secured channel like HTTPS . An access token issued by the AppsDock authentication service looks like the following example: 1 eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c To attach the access token, you must set the access token as bearer type in the Authorization header.","title":"Access token"},{"location":"concepts/identity-access/authentication/#authentication","text":"The AppsDock OS authentication service provides an API for token and cookie based authentication management which includes the following operations: Endpoint Operation /auth/token Authentication with email/username and password /auth/token/refresh Session/Token refresh via refresh token or cookie /auth/revoke Revoke auth session via refresh token or cookie The AppsDock OS authentication service supports both token and cookie based authentication flows.","title":"Authentication"},{"location":"concepts/identity-access/authentication/#token-based-auth","text":"The token based authentication is used by confidential clients like mobile apps, which are capable of storing the refresh token securely. To obtain an access and refresh token, you have to send a request with the auth client credentials as authorization header to the token endpoint. 1 2 3 4 5 POST https://domain.com/auth/token Content-Type: application/json Authrorization: Basic WIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF {\"email\": \"jon@doe.com\", \"password\": \"xxxxx\"} The response contains the access/refresh token and additional information about the access token. 1 2 3 4 5 6 7 { \"expires_in\" : 180 , \"expires_at\" : 1595453215 , \"token_type\" : \"bearer\" , \"access_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0......\" , \"refresh_token\" : \"xwRJSMxNTE2MjMeKKF2QiwibmFtZSIfwpMeJf6Ik\" } The access token must be attached as bearer token in Authorization header on each request of secured resources. The refresh token is used to refresh the access token when it expires and obtain a new access token. Refresh token storage The refresh token must be stored securely and should not be accessible by the client user. Do not store the refresh token into any kind of client side storages of web applications like local or session store nor into cookies.","title":"Token Based Auth"},{"location":"concepts/identity-access/authentication/#cookie-based-auth","text":"A cookie based client response only the expiry information about the current auth session, and uses a secured HTTPS only cookie to store the auth session information on client side. The auth cookie issued by the cookie based confidential client has also a short lifetime like the access token, so it must be refreshed to keep the auth session valid. 1 2 3 4 { \"expires_in\" : 180 , \"expires_at\" : 1595453215 } Public clients Public auth clients are currently not supported by the AppsDock authentication service!","title":"Cookie Based Auth"},{"location":"concepts/identity-access/identity/","text":"Identities Identities include users, groups and roles. User The user is used for the identification and authorisation of an entity. Groups Users can be combined into a group. A user can belong to several groups. Roles can be assigned to several users through a group. Roles Roles are identities that can be assigned to users and groups. The permissions are identified by means of the role. One or more policies can be assigned to a role.","title":"Identity"},{"location":"concepts/identity-access/identity/#identities","text":"Identities include users, groups and roles.","title":"Identities"},{"location":"concepts/identity-access/identity/#user","text":"The user is used for the identification and authorisation of an entity.","title":"User"},{"location":"concepts/identity-access/identity/#groups","text":"Users can be combined into a group. A user can belong to several groups. Roles can be assigned to several users through a group.","title":"Groups"},{"location":"concepts/identity-access/identity/#roles","text":"Roles are identities that can be assigned to users and groups. The permissions are identified by means of the role. One or more policies can be assigned to a role.","title":"Roles"},{"location":"concepts/identity-access/policies-and-permissions/","text":"Policies and permissions Permission A permission consists of one or more policies. Examples The permission DMS user has the indefinite right to read within the entire DMS and the definite right to write in its own folders. Policy Action Role Resource Effect Read com.appsdock.dms.action:volume.read Role A * ALLOW Read com.appsdock.dms.action:volume.read Role B Volume A ALLOW Write com.appsdock.dms.action:volume.write Role B Volume B ALLOW Write com.appsdock.dms.action:volume.write Role C Volume B DENY Policy A policy consists of the action, role, resource and effect. Action Actions are defined by the apps. Example The DMS app defines the action Create folder . Role Exactly one role must be assigned per policy. Resource A resource can be defined or undefined. Indefinite resources are defined by means of the * . Effect The effect is either allow or deny . Permission control The permission control is given the action as the first parameter, and the context as the second parameter. 1 2 3 4 5 6 <?php $isPermitted = $this -> permissionController -> isPermitted ( 'read' , $this -> context -> getId () ); Given a specific resource, its UUID is given as the third parameter. 1 2 3 4 5 6 7 <?php $isPermitted = $this -> permissionController -> isPermitted ( 'read' , $this -> context -> getId (), $appId ); Alternatively, a default value can be specified as the fourth parameter. This is only returned if no policy exists. 1 2 3 4 5 6 7 8 <?php $isPermitted = $this -> permissionController -> isPermitted ( 'read' , $this -> context -> getId (), $appId , $default ); REST API Permissions are defined as method-attribute or alternatively as class-attribute . Permissions as class-attribute apply to all functions within the class. Unspecified resource 1 2 3 <?php #[Permission('read')] Specified resource The second parameter can be used to specify the UUID of the resource. The UUID can, for example, be passed dynamically in the context of the REST API by means of a routing parameter. 1 2 3 <?php #[Permission('read', 'id')] Alternative context The third parameter can be used to specify an alternative context so that policies from other apps can be checked. 1 2 3 <?php #[Permission('read', 'id', 'com.appsdock')] Multiple policies Multiple policies can be passed directly as an array. 1 2 3 <?php #[Permission(['read', 'write', 'delete'])] For specific resources or an alternative context, these must be listed separately. 1 2 3 4 5 <?php #[Permission(['read', 'write'])] #[Permission('delete', 'id')] #[Permission('administrate', context: 'com.appsdock')] Class attribute 1 2 3 4 5 6 7 <?php #[Permission('read')] class DMS { ... } Method attribute 1 2 3 4 5 6 7 <?php #[Permission('write')] public function write ( string $text ) : bool { ... } Special cases Public access Public access at class level can be overridden by policies at method level. Again, method-level public access ignores any additional policies. 1 2 3 <?php #[PublicAccess]","title":"Policies and permissions"},{"location":"concepts/identity-access/policies-and-permissions/#policies-and-permissions","text":"","title":"Policies and permissions"},{"location":"concepts/identity-access/policies-and-permissions/#permission","text":"A permission consists of one or more policies.","title":"Permission"},{"location":"concepts/identity-access/policies-and-permissions/#examples","text":"The permission DMS user has the indefinite right to read within the entire DMS and the definite right to write in its own folders. Policy Action Role Resource Effect Read com.appsdock.dms.action:volume.read Role A * ALLOW Read com.appsdock.dms.action:volume.read Role B Volume A ALLOW Write com.appsdock.dms.action:volume.write Role B Volume B ALLOW Write com.appsdock.dms.action:volume.write Role C Volume B DENY","title":"Examples"},{"location":"concepts/identity-access/policies-and-permissions/#policy","text":"A policy consists of the action, role, resource and effect.","title":"Policy"},{"location":"concepts/identity-access/policies-and-permissions/#action","text":"Actions are defined by the apps.","title":"Action"},{"location":"concepts/identity-access/policies-and-permissions/#example","text":"The DMS app defines the action Create folder .","title":"Example"},{"location":"concepts/identity-access/policies-and-permissions/#role","text":"Exactly one role must be assigned per policy.","title":"Role"},{"location":"concepts/identity-access/policies-and-permissions/#resource","text":"A resource can be defined or undefined. Indefinite resources are defined by means of the * .","title":"Resource"},{"location":"concepts/identity-access/policies-and-permissions/#effect","text":"The effect is either allow or deny .","title":"Effect"},{"location":"concepts/identity-access/policies-and-permissions/#permission-control","text":"The permission control is given the action as the first parameter, and the context as the second parameter. 1 2 3 4 5 6 <?php $isPermitted = $this -> permissionController -> isPermitted ( 'read' , $this -> context -> getId () ); Given a specific resource, its UUID is given as the third parameter. 1 2 3 4 5 6 7 <?php $isPermitted = $this -> permissionController -> isPermitted ( 'read' , $this -> context -> getId (), $appId ); Alternatively, a default value can be specified as the fourth parameter. This is only returned if no policy exists. 1 2 3 4 5 6 7 8 <?php $isPermitted = $this -> permissionController -> isPermitted ( 'read' , $this -> context -> getId (), $appId , $default );","title":"Permission control"},{"location":"concepts/identity-access/policies-and-permissions/#rest-api","text":"Permissions are defined as method-attribute or alternatively as class-attribute . Permissions as class-attribute apply to all functions within the class.","title":"REST API"},{"location":"concepts/identity-access/policies-and-permissions/#unspecified-resource","text":"1 2 3 <?php #[Permission('read')]","title":"Unspecified resource"},{"location":"concepts/identity-access/policies-and-permissions/#specified-resource","text":"The second parameter can be used to specify the UUID of the resource. The UUID can, for example, be passed dynamically in the context of the REST API by means of a routing parameter. 1 2 3 <?php #[Permission('read', 'id')]","title":"Specified resource"},{"location":"concepts/identity-access/policies-and-permissions/#alternative-context","text":"The third parameter can be used to specify an alternative context so that policies from other apps can be checked. 1 2 3 <?php #[Permission('read', 'id', 'com.appsdock')]","title":"Alternative context"},{"location":"concepts/identity-access/policies-and-permissions/#multiple-policies","text":"Multiple policies can be passed directly as an array. 1 2 3 <?php #[Permission(['read', 'write', 'delete'])] For specific resources or an alternative context, these must be listed separately. 1 2 3 4 5 <?php #[Permission(['read', 'write'])] #[Permission('delete', 'id')] #[Permission('administrate', context: 'com.appsdock')]","title":"Multiple policies"},{"location":"concepts/identity-access/policies-and-permissions/#class-attribute","text":"1 2 3 4 5 6 7 <?php #[Permission('read')] class DMS { ... }","title":"Class attribute"},{"location":"concepts/identity-access/policies-and-permissions/#method-attribute","text":"1 2 3 4 5 6 7 <?php #[Permission('write')] public function write ( string $text ) : bool { ... }","title":"Method attribute"},{"location":"concepts/identity-access/policies-and-permissions/#special-cases","text":"Public access Public access at class level can be overridden by policies at method level. Again, method-level public access ignores any additional policies. 1 2 3 <?php #[PublicAccess]","title":"Special cases"},{"location":"exception-errors/app/","text":"App exception errors This page provides a list of all app exception errors within AppsDock OS . The guideline for exception errors can be found here . General","title":"App"},{"location":"exception-errors/app/#app-exception-errors","text":"This page provides a list of all app exception errors within AppsDock OS . The guideline for exception errors can be found here .","title":"App exception errors"},{"location":"exception-errors/app/#general","text":"","title":"General"},{"location":"exception-errors/core/","text":"Core exception errors This page provides a list of all core exception errors within AppsDock OS . The guideline for exception errors can be found here . General 10001 The setting has the wrong type. When validating the data type of the value of the setting, it was found that it does not correspond to the expected data type. Reasons The data type of the value of the setting is not of the expected data type. The data type of the value of the setting was of the expected data type, but changed during transportation. Solutions Change the data type of the value of the setting to the expected data type. Check your network for HTTP POST manipulation by firewalls or proxies. 10005 The option is not in the list of allowed options. When validating the value of the setting, it was found that it does not correspond to the allowed values. 10006 Some options are not in the list of allowed options. When validating the values of the setting, it was found that some do not correspond to the allowed values. 10007 The setting is not a valid date. When validating the value of the setting, it was found that it does not correspond to a date. A valid date format is 0000-00-00 . 10008 The setting is not a valid time. When validating the value of the setting, it was found that it does not correspond to a time. A valid time format is 00:00:00 . 10009 The setting does not exist. When reading the setting in the configuration, it was found that the setting does not exist. 10010 The setting does not exist. When changing the setting in the configuration, it was found that the setting does not exist. 10011 The setting does not exist. When resetting the setting in the configuration, it was found that the setting does not exist. 10012 The setting does not exist. When setting the setting in the user preferences, it was found that the setting does not exist. 10013 System cannot be uninstalled via app lifecycle management. 10014 Invalid/malformed database setup definition files. 10015 An error occurred while setup schema via database descriptor for database lifecycle operations. 10016 An error occurred while processing seeding files for database setup via descriptor in context of lifecycle operations. Reasons Invalid or malformed seeding files. Inconsistent id relations within the seeding files. Solutions Check seeding files for syntax and correct formatting. Check relations ($uuid, $ref) for consistency. Infrastructure 11000 An error occurred while connecting to the database. 11001 An error occurred while setup the ORM. 11002 An error occurred during executing a sql statement. 11003 An error occurred during ORM operations. 11004 An error occurred while execute statement for creating a new database. 11005 An error occurred while execute statement for database table creation. 11006 An error occurred while execute statement for delete database. 11007 An error occurred while execute statement during database migration. 11008 An error occurred while operate with database via ORM. 11009 An error occurred while database operation via cli. 11010 An error occurred while execute statement to copy database/schema. 11011 An error occurred while execute statement for database seeding. 11300 The attempt to connect to the AMQP Server failed. 11301 The message translation from a message bus message to amqp message failed due to an json encoding of the message body. Security & Authentication 12000 The server is currently not available. Reasons AppsDock OS is not installed yet. Could not create SSH key pairs. Solutions Check current installation and eventually run adk install Run adk util:ssh-gen for generating new key pairs. Please note, that all current auth sessions will not work anymore. 12001 The username or password is wrong. Reasons The entered username does not exist. The password entered is incorrect or does not belong to the user name. Solutions Check the username and try again. Account may not exist now, please contact your account administrator. 12002 The account is not available yet. Reason The user account has been created recently and requires an action of the account owner for activation. Solutions Check your email inbox for an activation email and complete the account activation by following the instructions. Contact the user account administrator and request for a new activation email. 12003 Your account is temporary suspended because of too many failed logins. Reason Frequently failed login attempts. Solution Try again shortly. 12004 The credentials were incorrect. Reason Username or password is wrong. Solution Check entered username and password and try again. 12005 The user account is locked. Solution Contact the user account administrator. 12006 The user account is inactive. Solution Contact the user account administrator. 12007 Access denied due to insufficient permissions. Reasons The users role does not have the policy that permits the required action. The user is not assigned to the role which is already permitted. Solutions Assign the policy that permits the required action to the users role. Assign the user to the role which is already permitted. 12008 Access denied due to insufficient authority. Reason The user is not authorized/signed in. Solution The user has to sign in with personal credentials. Internal communication","title":"Core"},{"location":"exception-errors/core/#core-exception-errors","text":"This page provides a list of all core exception errors within AppsDock OS . The guideline for exception errors can be found here .","title":"Core exception errors"},{"location":"exception-errors/core/#general","text":"","title":"General"},{"location":"exception-errors/core/#10001","text":"The setting has the wrong type. When validating the data type of the value of the setting, it was found that it does not correspond to the expected data type.","title":"10001"},{"location":"exception-errors/core/#reasons","text":"The data type of the value of the setting is not of the expected data type. The data type of the value of the setting was of the expected data type, but changed during transportation.","title":"Reasons"},{"location":"exception-errors/core/#solutions","text":"Change the data type of the value of the setting to the expected data type. Check your network for HTTP POST manipulation by firewalls or proxies.","title":"Solutions"},{"location":"exception-errors/core/#10005","text":"The option is not in the list of allowed options. When validating the value of the setting, it was found that it does not correspond to the allowed values.","title":"10005"},{"location":"exception-errors/core/#10006","text":"Some options are not in the list of allowed options. When validating the values of the setting, it was found that some do not correspond to the allowed values.","title":"10006"},{"location":"exception-errors/core/#10007","text":"The setting is not a valid date. When validating the value of the setting, it was found that it does not correspond to a date. A valid date format is 0000-00-00 .","title":"10007"},{"location":"exception-errors/core/#10008","text":"The setting is not a valid time. When validating the value of the setting, it was found that it does not correspond to a time. A valid time format is 00:00:00 .","title":"10008"},{"location":"exception-errors/core/#10009","text":"The setting does not exist. When reading the setting in the configuration, it was found that the setting does not exist.","title":"10009"},{"location":"exception-errors/core/#10010","text":"The setting does not exist. When changing the setting in the configuration, it was found that the setting does not exist.","title":"10010"},{"location":"exception-errors/core/#10011","text":"The setting does not exist. When resetting the setting in the configuration, it was found that the setting does not exist.","title":"10011"},{"location":"exception-errors/core/#10012","text":"The setting does not exist. When setting the setting in the user preferences, it was found that the setting does not exist.","title":"10012"},{"location":"exception-errors/core/#10013","text":"System cannot be uninstalled via app lifecycle management.","title":"10013"},{"location":"exception-errors/core/#10014","text":"Invalid/malformed database setup definition files.","title":"10014"},{"location":"exception-errors/core/#10015","text":"An error occurred while setup schema via database descriptor for database lifecycle operations.","title":"10015"},{"location":"exception-errors/core/#10016","text":"An error occurred while processing seeding files for database setup via descriptor in context of lifecycle operations.","title":"10016"},{"location":"exception-errors/core/#reasons_1","text":"Invalid or malformed seeding files. Inconsistent id relations within the seeding files.","title":"Reasons"},{"location":"exception-errors/core/#solutions_1","text":"Check seeding files for syntax and correct formatting. Check relations ($uuid, $ref) for consistency.","title":"Solutions"},{"location":"exception-errors/core/#infrastructure","text":"","title":"Infrastructure"},{"location":"exception-errors/core/#11000","text":"An error occurred while connecting to the database.","title":"11000"},{"location":"exception-errors/core/#11001","text":"An error occurred while setup the ORM.","title":"11001"},{"location":"exception-errors/core/#11002","text":"An error occurred during executing a sql statement.","title":"11002"},{"location":"exception-errors/core/#11003","text":"An error occurred during ORM operations.","title":"11003"},{"location":"exception-errors/core/#11004","text":"An error occurred while execute statement for creating a new database.","title":"11004"},{"location":"exception-errors/core/#11005","text":"An error occurred while execute statement for database table creation.","title":"11005"},{"location":"exception-errors/core/#11006","text":"An error occurred while execute statement for delete database.","title":"11006"},{"location":"exception-errors/core/#11007","text":"An error occurred while execute statement during database migration.","title":"11007"},{"location":"exception-errors/core/#11008","text":"An error occurred while operate with database via ORM.","title":"11008"},{"location":"exception-errors/core/#11009","text":"An error occurred while database operation via cli.","title":"11009"},{"location":"exception-errors/core/#11010","text":"An error occurred while execute statement to copy database/schema.","title":"11010"},{"location":"exception-errors/core/#11011","text":"An error occurred while execute statement for database seeding.","title":"11011"},{"location":"exception-errors/core/#11300","text":"The attempt to connect to the AMQP Server failed.","title":"11300"},{"location":"exception-errors/core/#11301","text":"The message translation from a message bus message to amqp message failed due to an json encoding of the message body.","title":"11301"},{"location":"exception-errors/core/#security-authentication","text":"","title":"Security &amp; Authentication"},{"location":"exception-errors/core/#12000","text":"The server is currently not available.","title":"12000"},{"location":"exception-errors/core/#reasons_2","text":"AppsDock OS is not installed yet. Could not create SSH key pairs.","title":"Reasons"},{"location":"exception-errors/core/#solutions_2","text":"Check current installation and eventually run adk install Run adk util:ssh-gen for generating new key pairs. Please note, that all current auth sessions will not work anymore.","title":"Solutions"},{"location":"exception-errors/core/#12001","text":"The username or password is wrong.","title":"12001"},{"location":"exception-errors/core/#reasons_3","text":"The entered username does not exist. The password entered is incorrect or does not belong to the user name.","title":"Reasons"},{"location":"exception-errors/core/#solutions_3","text":"Check the username and try again. Account may not exist now, please contact your account administrator.","title":"Solutions"},{"location":"exception-errors/core/#12002","text":"The account is not available yet.","title":"12002"},{"location":"exception-errors/core/#reason","text":"The user account has been created recently and requires an action of the account owner for activation.","title":"Reason"},{"location":"exception-errors/core/#solutions_4","text":"Check your email inbox for an activation email and complete the account activation by following the instructions. Contact the user account administrator and request for a new activation email.","title":"Solutions"},{"location":"exception-errors/core/#12003","text":"Your account is temporary suspended because of too many failed logins.","title":"12003"},{"location":"exception-errors/core/#reason_1","text":"Frequently failed login attempts.","title":"Reason"},{"location":"exception-errors/core/#solution","text":"Try again shortly.","title":"Solution"},{"location":"exception-errors/core/#12004","text":"The credentials were incorrect.","title":"12004"},{"location":"exception-errors/core/#reason_2","text":"Username or password is wrong.","title":"Reason"},{"location":"exception-errors/core/#solution_1","text":"Check entered username and password and try again.","title":"Solution"},{"location":"exception-errors/core/#12005","text":"The user account is locked.","title":"12005"},{"location":"exception-errors/core/#solution_2","text":"Contact the user account administrator.","title":"Solution"},{"location":"exception-errors/core/#12006","text":"The user account is inactive.","title":"12006"},{"location":"exception-errors/core/#solution_3","text":"Contact the user account administrator.","title":"Solution"},{"location":"exception-errors/core/#12007","text":"Access denied due to insufficient permissions.","title":"12007"},{"location":"exception-errors/core/#reasons_4","text":"The users role does not have the policy that permits the required action. The user is not assigned to the role which is already permitted.","title":"Reasons"},{"location":"exception-errors/core/#solutions_5","text":"Assign the policy that permits the required action to the users role. Assign the user to the role which is already permitted.","title":"Solutions"},{"location":"exception-errors/core/#12008","text":"Access denied due to insufficient authority.","title":"12008"},{"location":"exception-errors/core/#reason_3","text":"The user is not authorized/signed in.","title":"Reason"},{"location":"exception-errors/core/#solution_4","text":"The user has to sign in with personal credentials.","title":"Solution"},{"location":"exception-errors/core/#internal-communication","text":"","title":"Internal communication"},{"location":"exception-errors/integration/","text":"Integration exception errors This page provides a list of all system exception errors within AppsDock OS . The guideline for exception errors can be found here . General","title":"Integration"},{"location":"exception-errors/integration/#integration-exception-errors","text":"This page provides a list of all system exception errors within AppsDock OS . The guideline for exception errors can be found here .","title":"Integration exception errors"},{"location":"exception-errors/integration/#general","text":"","title":"General"},{"location":"exception-errors/plugin/","text":"Plugin exception errors This page provides a list of all plugin exception errors within AppsDock OS . The guideline for exception errors can be found here . General","title":"Plugin"},{"location":"exception-errors/plugin/#plugin-exception-errors","text":"This page provides a list of all plugin exception errors within AppsDock OS . The guideline for exception errors can be found here .","title":"Plugin exception errors"},{"location":"exception-errors/plugin/#general","text":"","title":"General"},{"location":"exception-errors/system/","text":"System exception errors This page provides a list of all system exception errors within AppsDock OS . The guideline for exception errors can be found here . General","title":"System"},{"location":"exception-errors/system/#system-exception-errors","text":"This page provides a list of all system exception errors within AppsDock OS . The guideline for exception errors can be found here .","title":"System exception errors"},{"location":"exception-errors/system/#general","text":"","title":"General"},{"location":"gettingstarted/guidelines/commit-messages/","text":"Commit messages The commit message must begin with the type of commit, followed by any number of tags. Optionally, a note can also be specified. This must begin with a capital letter. The second and all further lines contain the changes that have taken place. One change per line. Paragraphs are not permitted; they must be written through, as a paragraph introduces a new change. Types Type Description BUGIFX Error in code fixed. The note area must contain the issue (number) if available. CHANGE Existing code changed. HOTFIX Bug fixed at short notice, without planning and testing). NEW New code added. REFACTOR Reorganised existing code. RELEASE New version released. The version number must be specified with a leading v as a tag. Tags The tags must be written in Camel case format. The tags must be listed in order from general to specific. Tag Description Example #component Changes affecting components. components/ #css Adjustments in stylesheet files only. .css, .sass #design Cosmetic adjustments that only affect the appearance, but no function. .css, .sass, .vue, ... #git All Git files. .gitignore #middleware Changes that affect the middleware. middleware/*.js #nuxt All Nuxt.js files. nuxt.config.js #package The package.json file. package.json #page Changes that affect pages. page/ #plugin Changes that affect plugins. plugin/*.js #poc Changes that are temporarily relevant for a proof of concept. .* #project All files that are not directly related to the application. package.json, nuxt.config.js, docker-compose.yml #static Changes that affect static files. static/ #store All changes that affect the store. store/.js #vuetify All Vuetify.js files. vuetify.options.js Examples 1 2 3 CHANGE #plugin #css #middleware Image plugin Add a new image plugin for test images. Add a new static css helper file. 1 RELEASE #v1.12.5 Pre-Release","title":"Commit messages"},{"location":"gettingstarted/guidelines/commit-messages/#commit-messages","text":"The commit message must begin with the type of commit, followed by any number of tags. Optionally, a note can also be specified. This must begin with a capital letter. The second and all further lines contain the changes that have taken place. One change per line. Paragraphs are not permitted; they must be written through, as a paragraph introduces a new change.","title":"Commit messages"},{"location":"gettingstarted/guidelines/commit-messages/#types","text":"Type Description BUGIFX Error in code fixed. The note area must contain the issue (number) if available. CHANGE Existing code changed. HOTFIX Bug fixed at short notice, without planning and testing). NEW New code added. REFACTOR Reorganised existing code. RELEASE New version released. The version number must be specified with a leading v as a tag.","title":"Types"},{"location":"gettingstarted/guidelines/commit-messages/#tags","text":"The tags must be written in Camel case format. The tags must be listed in order from general to specific. Tag Description Example #component Changes affecting components. components/ #css Adjustments in stylesheet files only. .css, .sass #design Cosmetic adjustments that only affect the appearance, but no function. .css, .sass, .vue, ... #git All Git files. .gitignore #middleware Changes that affect the middleware. middleware/*.js #nuxt All Nuxt.js files. nuxt.config.js #package The package.json file. package.json #page Changes that affect pages. page/ #plugin Changes that affect plugins. plugin/*.js #poc Changes that are temporarily relevant for a proof of concept. .* #project All files that are not directly related to the application. package.json, nuxt.config.js, docker-compose.yml #static Changes that affect static files. static/ #store All changes that affect the store. store/.js #vuetify All Vuetify.js files. vuetify.options.js","title":"Tags"},{"location":"gettingstarted/guidelines/commit-messages/#examples","text":"1 2 3 CHANGE #plugin #css #middleware Image plugin Add a new image plugin for test images. Add a new static css helper file. 1 RELEASE #v1.12.5 Pre-Release","title":"Examples"},{"location":"gettingstarted/guidelines/configuration/","text":"Configuration Setting ID The first part of the ID of a setting is always composed of the app context, such as com.appsdock or com.appsdock.hrm , followed by the identifier config . This is followed by a colon as a separator. The second part consists of any (or none) grouping separated by dots. The last word is the name of the setting. Examples Context Identifier 1 Separator Group 2 Name com.appsdock .config : maintenance date com.appsdock .config : email.smtp username com.appsdock.hrm .config : leave max Setting types ID Name Description BOOL True | False A \"either or\" choice. STRING String A string. It's the default . INT Number A signed number. SELECT Selection A single selection of options. MULTISELECT Multi selection A multiple selection of options. DATE Date A date. TIME Time A time. Default value The default value is used if no value has been set by the user. Therefore, it can be easily overwritten during updates. If a value has been set by the user, it remains unaffected. The possibility to change the values is managed via the rights system. There are settings that cannot be changed by normal administrators, so the default value is always used here. Database Field Type id VARCHAR(255) type ENUM('BOOL', 'STRING', 'INT', 'SELECT', 'MULTISELECT', 'DATE', 'TIME') value JSON default JSON options JSON Examples id type value default options com.appsdock.config:email.smtp.authentication BOOL [true] [] [] com.appsdock.config:email.smtp.username STRING [\"example@example.com\"] [] [] com.appsdock.config:email.smtp.connection.retries INT [10] [5] [] com.appsdock.hrm.config:notification.email.interval SELECT [\"daily\"] [\"weekly\"] [\"daily\", \"weekly\", \"monthly\"] com.appsdock.config:notification.channels MULTISELECT [\"browser\", \"email\", \"discord\"] [\"browser\"] [\"browser\", \"email\", \"discord\", \"telegram\", \"whatsapp\", \"sms\"]} com.appsdock.config:maintenance.date DATE [\"2021-06-01\"]} [] com.appsdock.config:maintenance.time TIME [\"14:35\"] [] The identifier for configuration settings is always config . \u21a9 A group is optional . \u21a9","title":"Configuration"},{"location":"gettingstarted/guidelines/configuration/#configuration","text":"","title":"Configuration"},{"location":"gettingstarted/guidelines/configuration/#setting-id","text":"The first part of the ID of a setting is always composed of the app context, such as com.appsdock or com.appsdock.hrm , followed by the identifier config . This is followed by a colon as a separator. The second part consists of any (or none) grouping separated by dots. The last word is the name of the setting.","title":"Setting ID"},{"location":"gettingstarted/guidelines/configuration/#examples","text":"Context Identifier 1 Separator Group 2 Name com.appsdock .config : maintenance date com.appsdock .config : email.smtp username com.appsdock.hrm .config : leave max","title":"Examples"},{"location":"gettingstarted/guidelines/configuration/#setting-types","text":"ID Name Description BOOL True | False A \"either or\" choice. STRING String A string. It's the default . INT Number A signed number. SELECT Selection A single selection of options. MULTISELECT Multi selection A multiple selection of options. DATE Date A date. TIME Time A time.","title":"Setting types"},{"location":"gettingstarted/guidelines/configuration/#default-value","text":"The default value is used if no value has been set by the user. Therefore, it can be easily overwritten during updates. If a value has been set by the user, it remains unaffected. The possibility to change the values is managed via the rights system. There are settings that cannot be changed by normal administrators, so the default value is always used here.","title":"Default value"},{"location":"gettingstarted/guidelines/configuration/#database","text":"Field Type id VARCHAR(255) type ENUM('BOOL', 'STRING', 'INT', 'SELECT', 'MULTISELECT', 'DATE', 'TIME') value JSON default JSON options JSON","title":"Database"},{"location":"gettingstarted/guidelines/configuration/#examples_1","text":"id type value default options com.appsdock.config:email.smtp.authentication BOOL [true] [] [] com.appsdock.config:email.smtp.username STRING [\"example@example.com\"] [] [] com.appsdock.config:email.smtp.connection.retries INT [10] [5] [] com.appsdock.hrm.config:notification.email.interval SELECT [\"daily\"] [\"weekly\"] [\"daily\", \"weekly\", \"monthly\"] com.appsdock.config:notification.channels MULTISELECT [\"browser\", \"email\", \"discord\"] [\"browser\"] [\"browser\", \"email\", \"discord\", \"telegram\", \"whatsapp\", \"sms\"]} com.appsdock.config:maintenance.date DATE [\"2021-06-01\"]} [] com.appsdock.config:maintenance.time TIME [\"14:35\"] [] The identifier for configuration settings is always config . \u21a9 A group is optional . \u21a9","title":"Examples"},{"location":"gettingstarted/guidelines/exception-errors/","text":"Exception errors AppsDock OS has the following three main exception errors classes. Exception LogicException RuntimeException All three implement the ExceptionInterface and use the ExceptionTrait to provide useful information for finding the cause and fixing the problem. They are all located at AppsDock \u276f Core \u276f Common \u276f Exception . Convention Every AppsDock OS usage exception error 1 must inherit from one of these exception classes. Usage Each exception error has three parameters. The first parameter is the error code which must adhere to the conventions . The second parameter may contain additional information. The third parameter may contain a preceding exception error. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <?php /** * ExampleException * * @param array $ex * @param array $details * @param Throwable|null $previous */ public function __construct ( array $ex , array $details = [], Throwable $previous = null ) { ... } throw new ExampleException ( EX_00000 , [ 'Variable 1' => $var1 , 'Variable 2' => $var2 ], $previous ); Error codes An error code is created as a ARRAY constant under AppsDock OS \u276f application \u276f config \u276f exceptions.php . The constant name must start with EX_ followed by a 5-digit unique number. An error code constant must always contain the error code itself and a message. Optionally, a public message can be included, which is then shown to users instead of the actual message. The description is also not mandatory if the message is already meaningful enough. Optionally, reasons and solutions for the exception error can be given. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <?php const EX_00000 = [ 'code' => 00000 , 'message' => 'The variable has the wrong data type.' , 'publicMessage' => 'Something is wrong. Please try again later.' 'description' => 'When validating the data type ...' , 'reasons' => [ 'The data type is not the expected data type.' , '...' ], 'solutions' => [ 'Change the data type of the variable.' , '...' ] ]; Conventions Error code ranges Range Context Scope Description 10.000 Core AppsDock OS core components. 11.000 Infrastructure AppsDock OS core infrastructure components. 12.000 Security & Authentication AppsDock OS core security and authentication components. 13.000 Internal communication AppsDock OS core internal communication components. 20.000 System AppsDock OS system components. 30.000 Integration Third party API services, like an email service provider. 40.000 Plugin Small application to extend AppsDock OS or app functionality. 90.000 2 App Applications build with AppsDock OS . Usage exception errors occur while using AppsDock OS . Mostly these errors are caused by a user. The opposite are build exception errors. \u21a9 The ranges from 50.000 to 80.000 are reserved for future use. \u21a9","title":"Exception errors"},{"location":"gettingstarted/guidelines/exception-errors/#exception-errors","text":"AppsDock OS has the following three main exception errors classes. Exception LogicException RuntimeException All three implement the ExceptionInterface and use the ExceptionTrait to provide useful information for finding the cause and fixing the problem. They are all located at AppsDock \u276f Core \u276f Common \u276f Exception . Convention Every AppsDock OS usage exception error 1 must inherit from one of these exception classes.","title":"Exception errors"},{"location":"gettingstarted/guidelines/exception-errors/#usage","text":"Each exception error has three parameters. The first parameter is the error code which must adhere to the conventions . The second parameter may contain additional information. The third parameter may contain a preceding exception error. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <?php /** * ExampleException * * @param array $ex * @param array $details * @param Throwable|null $previous */ public function __construct ( array $ex , array $details = [], Throwable $previous = null ) { ... } throw new ExampleException ( EX_00000 , [ 'Variable 1' => $var1 , 'Variable 2' => $var2 ], $previous );","title":"Usage"},{"location":"gettingstarted/guidelines/exception-errors/#error-codes","text":"An error code is created as a ARRAY constant under AppsDock OS \u276f application \u276f config \u276f exceptions.php . The constant name must start with EX_ followed by a 5-digit unique number. An error code constant must always contain the error code itself and a message. Optionally, a public message can be included, which is then shown to users instead of the actual message. The description is also not mandatory if the message is already meaningful enough. Optionally, reasons and solutions for the exception error can be given. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <?php const EX_00000 = [ 'code' => 00000 , 'message' => 'The variable has the wrong data type.' , 'publicMessage' => 'Something is wrong. Please try again later.' 'description' => 'When validating the data type ...' , 'reasons' => [ 'The data type is not the expected data type.' , '...' ], 'solutions' => [ 'Change the data type of the variable.' , '...' ] ];","title":"Error codes"},{"location":"gettingstarted/guidelines/exception-errors/#conventions","text":"","title":"Conventions"},{"location":"gettingstarted/guidelines/exception-errors/#error-code-ranges","text":"Range Context Scope Description 10.000 Core AppsDock OS core components. 11.000 Infrastructure AppsDock OS core infrastructure components. 12.000 Security & Authentication AppsDock OS core security and authentication components. 13.000 Internal communication AppsDock OS core internal communication components. 20.000 System AppsDock OS system components. 30.000 Integration Third party API services, like an email service provider. 40.000 Plugin Small application to extend AppsDock OS or app functionality. 90.000 2 App Applications build with AppsDock OS . Usage exception errors occur while using AppsDock OS . Mostly these errors are caused by a user. The opposite are build exception errors. \u21a9 The ranges from 50.000 to 80.000 are reserved for future use. \u21a9","title":"Error code ranges"},{"location":"gettingstarted/guidelines/naming-convention/","text":"Naming convention Classes Class names are written in CamelCase notation. Class names should be as meaningful as possible. If a class name contains an abbreviation, API becomes Api and SQL becomes Sql for example. Exceptions If an abbreviation stands alone or is at the end of the class name, it is written in capital letters like API , DI , RestAPI or ExtendedHTML . Methods Method names are written in CamelCase notation. Method names should be as meaningful as possible. If a method name contains an abbreviation, API becomes Api and SQL becomes Sql for example. Exceptions If an abbreviation stands alone or is at the end of the method name, it is written in capital letters like API , DI , RestAPI or ExtendedHTML .","title":"Naming convention"},{"location":"gettingstarted/guidelines/naming-convention/#naming-convention","text":"","title":"Naming convention"},{"location":"gettingstarted/guidelines/naming-convention/#classes","text":"Class names are written in CamelCase notation. Class names should be as meaningful as possible. If a class name contains an abbreviation, API becomes Api and SQL becomes Sql for example.","title":"Classes"},{"location":"gettingstarted/guidelines/naming-convention/#exceptions","text":"If an abbreviation stands alone or is at the end of the class name, it is written in capital letters like API , DI , RestAPI or ExtendedHTML .","title":"Exceptions"},{"location":"gettingstarted/guidelines/naming-convention/#methods","text":"Method names are written in CamelCase notation. Method names should be as meaningful as possible. If a method name contains an abbreviation, API becomes Api and SQL becomes Sql for example.","title":"Methods"},{"location":"gettingstarted/guidelines/naming-convention/#exceptions_1","text":"If an abbreviation stands alone or is at the end of the method name, it is written in capital letters like API , DI , RestAPI or ExtendedHTML .","title":"Exceptions"},{"location":"gettingstarted/guidelines/rest-api/","text":"REST API AppsDock OS provides a REST API service for external communication. The service can be used to query as well as manipulate the state of resources. An overview of all available REST API endpoints can be found here . Create an endpoint The endpoints are defined via annotation attributes, and the access can be secured by policies. Create a class that inherits from the AppsDock \u276f Core \u276f Contracts \u276f App \u276f Application \u276f RestAPIController . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 <?php use AppsDock\\Core\\Contracts\\App\\Application\\RestAPIController ; use AppsDock\\Core\\Http\\JsonResponse ; use const AppsDock\\API\\REST\\Book\\BOOK_CREATE ; use const AppsDock\\API\\REST\\Book\\BOOK_DELETE ; use const AppsDock\\API\\REST\\Book\\BOOK_GET ; use const AppsDock\\API\\REST\\Book\\BOOK_LIST ; class BookRestAPI extends RestAPIController { #[API('GET', '/books', BOOK_LIST)] public function listBooks () : JsonResponse { ... } #[API('GET', '/books/{id}', BOOK_GET)] public function getBook ( string $bookId ) : JsonResponse { ... } #[API('POST', '/books', BOOK_CREATE)] public function createBook () : JsonResponse { ... } #[API('DELETE', '/books/{id}', BOOK_DELETE)] public function deleteBook ( string $bookId ) : JsonResponse { ... } } Method attributes Parameter Type Default Required Description Method string | string[] \u2714 Possible values are DELETE , GET , HEAD , PATCH , POST and PUT . Route string \u2714 An endpoint route. Context array \u2714 An Array constant with more information about this endpoint. Version int 1 \u2716 The API version. Return value The return type of any endpoint must be always an instance of AppsDock \u276f Core \u276f Http \u276f JsonResponse . The following methods are provided by AppsDock OS and should be used to return a valid type. General 1 2 3 4 5 6 7 <?php $this -> createResponse ( int $statusCode = 200 , array $data = [], array $headers = [] ); HTTP status 1 2 3 4 5 6 7 <?php $this -> createStatusResponse ( int $statusCode , string $message = null , array $headers = [] ); Data 1 2 3 4 5 6 7 <?php $this -> createDataResponse ( ReadModel | ReadModelCollection | null $data , int $statusCode = 200 , array $headers = [] );","title":"REST API"},{"location":"gettingstarted/guidelines/rest-api/#rest-api","text":"AppsDock OS provides a REST API service for external communication. The service can be used to query as well as manipulate the state of resources. An overview of all available REST API endpoints can be found here .","title":"REST API"},{"location":"gettingstarted/guidelines/rest-api/#create-an-endpoint","text":"The endpoints are defined via annotation attributes, and the access can be secured by policies. Create a class that inherits from the AppsDock \u276f Core \u276f Contracts \u276f App \u276f Application \u276f RestAPIController . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 <?php use AppsDock\\Core\\Contracts\\App\\Application\\RestAPIController ; use AppsDock\\Core\\Http\\JsonResponse ; use const AppsDock\\API\\REST\\Book\\BOOK_CREATE ; use const AppsDock\\API\\REST\\Book\\BOOK_DELETE ; use const AppsDock\\API\\REST\\Book\\BOOK_GET ; use const AppsDock\\API\\REST\\Book\\BOOK_LIST ; class BookRestAPI extends RestAPIController { #[API('GET', '/books', BOOK_LIST)] public function listBooks () : JsonResponse { ... } #[API('GET', '/books/{id}', BOOK_GET)] public function getBook ( string $bookId ) : JsonResponse { ... } #[API('POST', '/books', BOOK_CREATE)] public function createBook () : JsonResponse { ... } #[API('DELETE', '/books/{id}', BOOK_DELETE)] public function deleteBook ( string $bookId ) : JsonResponse { ... } }","title":"Create an endpoint"},{"location":"gettingstarted/guidelines/rest-api/#method-attributes","text":"Parameter Type Default Required Description Method string | string[] \u2714 Possible values are DELETE , GET , HEAD , PATCH , POST and PUT . Route string \u2714 An endpoint route. Context array \u2714 An Array constant with more information about this endpoint. Version int 1 \u2716 The API version.","title":"Method attributes"},{"location":"gettingstarted/guidelines/rest-api/#return-value","text":"The return type of any endpoint must be always an instance of AppsDock \u276f Core \u276f Http \u276f JsonResponse . The following methods are provided by AppsDock OS and should be used to return a valid type.","title":"Return value"},{"location":"gettingstarted/guidelines/rest-api/#general","text":"1 2 3 4 5 6 7 <?php $this -> createResponse ( int $statusCode = 200 , array $data = [], array $headers = [] );","title":"General"},{"location":"gettingstarted/guidelines/rest-api/#http-status","text":"1 2 3 4 5 6 7 <?php $this -> createStatusResponse ( int $statusCode , string $message = null , array $headers = [] );","title":"HTTP status"},{"location":"gettingstarted/guidelines/rest-api/#data","text":"1 2 3 4 5 6 7 <?php $this -> createDataResponse ( ReadModel | ReadModelCollection | null $data , int $statusCode = 200 , array $headers = [] );","title":"Data"},{"location":"gettingstarted/phpstorm/xdebug/","text":"Xdebug setup Step 1: PhpStorm Follow the instructions on the screenshot. Step 2: Server Map local paths to remote paths. Step 2: Configuration Got to Run \u276f Debug \u276f Edit configurations \u276f Expand defaults \u276f PHP Remote debug and select the server created in Step 2. Step 4: Listening Go to Run \u276f Start listening for PHP connections and start listening. Then set a breakpoint in PhpStorm and call page in browser to test the setup.","title":"Xdebug"},{"location":"gettingstarted/phpstorm/xdebug/#xdebug-setup","text":"","title":"Xdebug setup"},{"location":"gettingstarted/phpstorm/xdebug/#step-1-phpstorm","text":"Follow the instructions on the screenshot.","title":"Step 1: PhpStorm"},{"location":"gettingstarted/phpstorm/xdebug/#step-2-server","text":"Map local paths to remote paths.","title":"Step 2: Server"},{"location":"gettingstarted/phpstorm/xdebug/#step-2-configuration","text":"Got to Run \u276f Debug \u276f Edit configurations \u276f Expand defaults \u276f PHP Remote debug and select the server created in Step 2.","title":"Step 2: Configuration"},{"location":"gettingstarted/phpstorm/xdebug/#step-4-listening","text":"Go to Run \u276f Start listening for PHP connections and start listening. Then set a breakpoint in PhpStorm and call page in browser to test the setup.","title":"Step 4: Listening"}]}